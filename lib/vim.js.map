{"version":3,"sources":["../src/vim.js"],"names":["Plugin","activate","vim","CodeMirror","editor","inkdrop","getActiveEditor","activateMode","on","handleEditorInit","deactivate","disposables","dispose","deactivateMode","cm","codeMirror","originalKeyMap","getOption","setOption","handleVimModeChange","handleFocusEditor","el","getWrapperElement","classList","add","registerCommands","registerExCommands","off","remove","startBufferingKey","command","wrapper","getCodeMirror","debug","pendingCommand","stopBufferingKey","undefined","isBufferingKey","contains","bufferKey","key","maybeInitVimState","vimKey","cmKeyToVimKey","inputState","keyBuffer","isInsertMode","CompositeDisposable","h","e","Object","assign","state","stopPropagation","operation","curOp","isVimOp","commandDispatcher","processCommand","Vim","suppressErrorLogging","console","error","b","originalEvent","p","operator","visualMode","getInputField","keyBinding","keymaps","findKeyBindings","keystrokes","target","length","commands","dispatch","handlers","clearInputState","exitVisualMode","exitInsertMode","keys","type","motion","motionArgs","forward","linewise","wordEnd","bigWord","inclusive","toJumplist","toFirstChar","repeatOffset","explicitRepeat","action","actionArgs","position","context","toKeys","isEdit","insertAt","textObjectInner","operatorArgs","indentRight","after","toLower","shouldMoveCursor","searchArgs","querySrc","wholeWordOnly","replace","blockwise","interlaceInsertRepeat","operatorMotionArgs","visualLine","increase","backtrack","textareaRef","nextSibling","addEventListener","handleEditorKeyDown","Disposable","removeEventListener","defineEx","yankClipboard","getVimGlobalState","text","clipboard","readText","indexOf","registerController","pushText","event","_opt","mode","keyName","isNumberic","match","webkitMatchesSelector","selectedCharacter","preventDefault","pushRepeatDigit","keysMatcher","exec","_event","autobind","module","exports"],"mappings":"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","file":"vim.js","sourcesContent":["import vimKeymap from './keymap'\nimport { CompositeDisposable, Disposable, CodeMirror } from 'inkdrop'\nimport { autobind } from 'core-decorators'\nimport { clipboard } from 'electron'\n\nclass Plugin {\n  activate() {\n    this.vim = vimKeymap(CodeMirror)\n    const editor = inkdrop.getActiveEditor()\n    if (editor) {\n      this.activateMode(editor)\n    }\n    inkdrop.on('editor:init', this.handleEditorInit)\n  }\n\n  deactivate() {\n    if (this.disposables) {\n      this.disposables.dispose()\n    }\n    const editor = inkdrop.getActiveEditor()\n    if (editor) {\n      this.deactivateMode(editor)\n    }\n  }\n\n  activateMode(editor) {\n    const cm = editor.codeMirror\n    this.originalKeyMap = cm.getOption('keyMap')\n    cm.setOption('keyMap', 'vim')\n    cm.on('vim-mode-change', this.handleVimModeChange)\n    cm.on('focus', this.handleFocusEditor)\n\n    const el = cm.getWrapperElement()\n    el.classList.add('vim-mode', 'normal-mode')\n\n    this.registerCommands()\n    this.registerExCommands()\n  }\n\n  deactivateMode(editor) {\n    const cm = editor.codeMirror\n    if (cm && this.originalKeyMap) {\n      editor.codeMirror.setOption('keyMap', this.originalKeyMap)\n      cm.off('vim-mode-change', this.handleVimModeChange)\n      const el = cm.getWrapperElement()\n      el.classList.remove('vim-mode')\n    }\n  }\n\n  startBufferingKey(command) {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    debug('Start key buffering')\n    wrapper.classList.add('key-buffering')\n    this.pendingCommand = command\n  }\n\n  stopBufferingKey() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    wrapper.classList.remove('key-buffering')\n    this.pendingCommand = undefined\n  }\n\n  isBufferingKey() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('key-buffering')\n  }\n\n  bufferKey(key) {\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const vimKey = this.vim.cmKeyToVimKey(\"'\" + key + \"'\")\n    vim.inputState.keyBuffer = vim.inputState.keyBuffer + vimKey\n    debug('keyBuffer:', vim.inputState.keyBuffer)\n  }\n\n  isInsertMode() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('insert-mode')\n  }\n\n  registerCommands() {\n    const disposables = new CompositeDisposable()\n    const editor = inkdrop.getActiveEditor()\n    const cm = editor.codeMirror\n    const wrapper = cm.getWrapperElement()\n    // bind key to command\n    const h = command => {\n      return e => {\n        debug(\n          'command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState)\n        )\n        e.stopPropagation()\n        const vim = this.vim.maybeInitVimState(cm)\n        return cm.operation(() => {\n          cm.curOp.isVimOp = true\n          try {\n            this.vim.commandDispatcher.processCommand(cm, vim, command)\n          } catch (e) {\n            // clear VIM state in case it's in a bad state.\n            cm.state.vim = undefined\n            this.vim.maybeInitVimState(cm)\n            if (!CodeMirror.Vim.suppressErrorLogging) {\n              console.error(e)\n            }\n            throw e\n          }\n          return true\n        })\n      }\n    }\n    // bind keystroke to command\n    const b = command => {\n      return e => {\n        debug(\n          'buffer command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent\n        )\n        this.startBufferingKey(h(command))\n        this.bufferKey(e.originalEvent.key)\n      }\n    }\n    // bind operator to command\n    const p = command => {\n      return e => {\n        debug(\n          'operator command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent\n        )\n        const vim = this.vim.maybeInitVimState(cm)\n        if (\n          !vim.inputState.operator &&\n          !this.isBufferingKey() &&\n          !vim.visualMode\n        ) {\n          this.startBufferingKey(e => {\n            const el = cm.getInputField()\n            const keyBinding = inkdrop.keymaps.findKeyBindings({\n              keystrokes: e.key,\n              target: el\n            })\n            if (keyBinding.length > 0) {\n              inkdrop.commands.dispatch(el, keyBinding[0].command)\n            }\n          })\n          this.bufferKey(e.originalEvent.key)\n        }\n        return h(command)(e)\n      }\n    }\n    const handlers = {\n      'vim-mode:native!': () => {},\n      'vim-mode:reset-normal-mode': e => {\n        CodeMirror.Vim.clearInputState(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim-mode:exit-visual-mode': e => {\n        debug('exit-visual-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitVisualMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim-mode:exit-insert-mode': e => {\n        debug('exit-insert-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitInsertMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim-mode:move-left': h({\n        keys: 'h',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:move-right': h({\n        keys: 'l',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true }\n      }),\n      'vim-mode:move-up': h({\n        keys: 'k',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: false, linewise: true }\n      }),\n      'vim-mode:move-down': h({\n        keys: 'j',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, linewise: true }\n      }),\n\n      'vim-mode:move-to-next-word': h({\n        keys: 'w',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false }\n      }),\n      'vim-mode:move-to-next-whole-word': h({\n        keys: 'W',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false, bigWord: true }\n      }),\n      'vim-mode:move-to-end-of-word': h({\n        keys: 'e',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: true, inclusive: true }\n      }),\n      'vim-mode:move-to-previous-end-of-word': h({\n        keys: 'ge',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: true, inclusive: true }\n      }),\n      'vim-mode:move-to-end-of-whole-word': h({\n        keys: 'E',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: true,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim-mode:move-to-previous-end-of-whole-word': h({\n        keys: 'gE',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: false,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim-mode:move-to-previous-word': h({\n        keys: 'b',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false }\n      }),\n      'vim-mode:move-to-previous-whole-word': h({\n        keys: 'B',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false, bigWord: true }\n      }),\n      'vim-mode:move-to-next-paragraph': h({\n        keys: '}',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim-mode:move-to-previous-paragraph': h({\n        keys: '{',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n      'vim-mode:move-to-beginning-of-line': h({\n        keys: '0',\n        type: 'motion',\n        motion: 'moveToStartOfLine'\n      }),\n      'vim-mode:move-to-first-character-of-line': h({\n        keys: '^',\n        type: 'motion',\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:move-to-first-character-of-line-and-down': h({\n        keys: '_',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true, repeatOffset: -1 }\n      }),\n      'vim-mode:move-to-last-character-of-line': h({\n        keys: '$',\n        type: 'motion',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true }\n      }),\n      'vim-mode:move-to-last-nonblank-character-of-line-and-down': () => {\n        '???'\n      },\n      'vim-mode:move-to-first-character-of-line-up': h({\n        keys: '-',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: false, toFirstChar: true }\n      }),\n      'vim-mode:move-to-first-character-of-line-down': h({\n        keys: '+',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true }\n      }),\n\n      'vim-mode:move-to-start-of-file': h({\n        keys: 'gg',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: false,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:scroll-half-screen-up': h({\n        keys: '<C-u>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: false, explicitRepeat: true }\n      }),\n      'vim-mode:scroll-full-screen-up': h({\n        keys: '<C-b>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:scroll-half-screen-down': h({\n        keys: '<C-d>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: true, explicitRepeat: true }\n      }),\n      'vim-mode:scroll-full-screen-down': h({\n        keys: '<C-f>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: true }\n      }),\n      'vim-mode:scroll-down': h({\n        keys: '<C-e>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: true, linewise: true }\n      }),\n      'vim-mode:scroll-up': h({\n        keys: '<C-y>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: false, linewise: true }\n      }),\n      'vim-mode:scroll-cursor-to-top': h({\n        keys: 'z<CR>',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:scroll-cursor-to-top-leave': h({\n        keys: 'zt',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' }\n      }),\n      'vim-mode:scroll-cursor-to-middle': h({\n        keys: 'z.',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:scroll-cursor-to-middle-leave': h({\n        keys: 'zz',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' }\n      }),\n      'vim-mode:scroll-cursor-to-bottom': h({\n        keys: 'z-',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' }\n      }),\n      'vim-mode:scroll-cursor-to-bottom-leave': h({\n        keys: 'zb',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:move-to-line': h({\n        keys: 'G',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: true,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:move-to-top-of-screen': h({\n        keys: 'H',\n        type: 'motion',\n        motion: 'moveToTopLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim-mode:move-to-bottom-of-screen': h({\n        keys: 'L',\n        type: 'motion',\n        motion: 'moveToBottomLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim-mode:move-to-middle-of-screen': h({\n        keys: 'M',\n        type: 'motion',\n        motion: 'moveToMiddleLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n\n      'vim-mode:delete': p({ keys: 'd', type: 'operator', operator: 'delete' }),\n      'vim-mode:delete-to-last-character-of-line': p({\n        keys: 'D',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim-mode:change': p({ keys: 'c', type: 'operator', operator: 'change' }),\n      'vim-mode:change-to-last-character-of-line': p({\n        keys: 'C',\n        type: 'operatorMotion',\n        operator: 'change',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim-mode:substitute-line': h({\n        keys: 'S',\n        type: 'keyToKey',\n        toKeys: 'cc',\n        context: 'normal'\n      }),\n      'vim-mode:replace': b({\n        keys: 'r<character>',\n        type: 'action',\n        action: 'replace',\n        isEdit: true\n      }),\n      'vim-mode:insert-at-beginning-of-line': h({\n        keys: 'I',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'firstNonBlank' },\n        context: 'normal'\n      }),\n      'vim-mode:text-object-manipulation-inner': b({\n        keys: 'i<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation',\n        motionArgs: { textObjectInner: true }\n      }),\n      'vim-mode:text-object-manipulation': b({\n        keys: 'a<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation'\n      }),\n      'vim-mode:indent': p({\n        keys: '>',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: true }\n      }),\n      'vim-mode:outdent': p({\n        keys: '<',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: false }\n      }),\n      'vim-mode:auto-indent': () => {\n        'not supported'\n      },\n      'vim-mode:join': h({\n        keys: 'J',\n        type: 'action',\n        action: 'joinLines',\n        isEdit: true\n      }),\n\n      'vim-mode:yank': p({ keys: 'y', type: 'operator', operator: 'yank' }),\n      'vim-mode:yank-line': h({\n        keys: 'Y',\n        type: 'operatorMotion',\n        operator: 'yank',\n        motion: 'expandToLine',\n        motionArgs: { linewise: true },\n        context: 'normal'\n      }),\n      'vim-mode:put-before': h({\n        keys: 'P',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: false, isEdit: true }\n      }),\n      'vim-mode:put-after': h({\n        keys: 'p',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: true, isEdit: true }\n      }),\n\n      'vim-mode:toggle-case': h({\n        keys: 'g~',\n        type: 'operator',\n        operator: 'changeCase'\n      }),\n      'vim-mode:upper-case': h({\n        keys: 'gU',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: false },\n        isEdit: true\n      }),\n      'vim-mode:lower-case': h({\n        keys: 'gu',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: true },\n        isEdit: true\n      }),\n      'vim-mode:toggle-case-now': h({\n        keys: '~',\n        type: 'operatorMotion',\n        operator: 'changeCase',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorArgs: { shouldMoveCursor: true },\n        context: 'normal'\n      }),\n\n      'vim-mode:mark': b({\n        keys: 'm<character>',\n        type: 'action',\n        action: 'setMark'\n      }),\n      'vim-mode:move-to-mark-literal': b({\n        keys: '`<character>',\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true }\n      }),\n      'vim-mode:move-to-mark': b({\n        keys: \"'<character>\",\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true, linewise: true }\n      }),\n\n      'vim-mode:find': b({\n        keys: 'f<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim-mode:find-backwards': b({\n        keys: 'F<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:till': b({\n        keys: 't<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim-mode:till-backwards': b({\n        keys: 'T<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:repeat-find': h({\n        keys: ';',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: true }\n      }),\n      'vim-mode:repeat-find-reverse': h({\n        keys: ',',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: false }\n      }),\n\n      'vim-mode:search': h({\n        keys: '/',\n        type: 'search',\n        searchArgs: { forward: true, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim-mode:reverse-search': h({\n        keys: '?',\n        type: 'search',\n        searchArgs: { forward: false, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim-mode:search-current-word': h({\n        keys: '*',\n        type: 'search',\n        searchArgs: {\n          forward: true,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:reverse-search-current-word': h({\n        keys: '#',\n        type: 'search',\n        searchArgs: {\n          forward: false,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:repeat-search': h({\n        keys: 'n',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim-mode:repeat-search-backwards': h({\n        keys: 'N',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n\n      'vim-mode:bracket-matching-motion': h({\n        keys: '%',\n        type: 'motion',\n        motion: 'moveToMatchedSymbol',\n        motionArgs: { inclusive: true, toJumplist: true }\n      }),\n\n      'vim-mode:ex-command': h({ keys: ':', type: 'ex' }),\n\n      // normal mode\n      'vim-mode:activate-insert-mode': h({\n        keys: 'i',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'inplace' },\n        context: 'normal'\n      }),\n      'vim-mode:activate-replace-mode': h({\n        keys: 'R',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { replace: true }\n      }),\n      'vim-mode:activate-characterwise-visual-mode': h({\n        keys: 'v',\n        type: 'action',\n        action: 'toggleVisualMode'\n      }),\n      'vim-mode:activate-linewise-visual-mode': h({\n        keys: 'V',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { linewise: true }\n      }),\n      'vim-mode:activate-blockwise-visual-mode': h({\n        keys: '<C-v>',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { blockwise: true }\n      }),\n\n      'vim-mode:undo': h({\n        keys: 'u',\n        type: 'action',\n        action: 'undo',\n        context: 'normal'\n      }),\n\n      'vim-mode:insert-above-with-newline': h({\n        keys: 'O',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: false },\n        context: 'normal'\n      }),\n      'vim-mode:insert-below-with-newline': h({\n        keys: 'o',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: true },\n        context: 'normal'\n      }),\n      'vim-mode:insert-after': h({\n        keys: 'a',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'charAfter' },\n        context: 'normal'\n      }),\n      'vim-mode:insert-after-end-of-line': h({\n        keys: 'A',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'eol' },\n        context: 'normal'\n      }),\n      'vim-mode:delete-right': h({\n        keys: 'x',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorMotionArgs: { visualLine: false }\n      }),\n      'vim-mode:delete-left': h({\n        keys: 'X',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false },\n        operatorMotionArgs: { visualLine: true }\n      }),\n      'vim-mode:substitute': h({\n        keys: 's',\n        type: 'keyToKey',\n        toKeys: 'cl',\n        context: 'normal'\n      }),\n      'vim-mode:repeat': h({\n        keys: '.',\n        type: 'action',\n        action: 'repeatLastEdit'\n      }),\n\n      'vim-mode:increase': h({\n        keys: '<C-a>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: true, backtrack: false }\n      }),\n      'vim-mode:decrease': h({\n        keys: '<C-x>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: false, backtrack: false }\n      }),\n\n      'vim-mode:register-prefix': b({\n        keys: '\"<character>',\n        type: 'action',\n        action: 'setRegister'\n      }),\n\n      // insert mode\n      'vim-mode:delete-to-beginning-of-word': h({\n        keys: '<C-w>',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false },\n        context: 'insert'\n      })\n    }\n    disposables.add(\n      inkdrop.commands.add(editor.textareaRef.nextSibling, handlers)\n    )\n    wrapper.addEventListener('keydown', this.handleEditorKeyDown)\n    disposables.add(\n      new Disposable(() =>\n        wrapper.removeEventListener('keydown', this.handleEditorKeyDown)\n      )\n    )\n\n    this.disposables = disposables\n  }\n\n  registerExCommands() {\n    const el = this.getCodeMirror().getWrapperElement()\n    this.vim.defineEx('write', 'w', () => {\n      inkdrop.commands.dispatch(el, 'core:save-note')\n    })\n    this.vim.defineEx('next', 'n', () => {\n      inkdrop.commands.dispatch(el, 'core:open-next-note')\n    })\n    this.vim.defineEx('prev', '', () => {\n      inkdrop.commands.dispatch(el, 'core:open-prev-note')\n    })\n    this.vim.defineEx('preview', 'p', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-preview')\n    })\n    this.vim.defineEx('side-by-side', 'side', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-side-by-side')\n    })\n  }\n\n  getCodeMirror() {\n    return inkdrop.getActiveEditor().codeMirror\n  }\n\n  yankClipboard() {\n    const state = this.vim.getVimGlobalState()\n    const text = clipboard.readText()\n    const linewise = text.indexOf('\\n') >= 0\n    state.registerController.pushText('0', 'yank', text, linewise, true)\n  }\n\n  @autobind\n  handleEditorInit(editor) {\n    this.activateMode(editor)\n  }\n\n  @autobind\n  handleVimModeChange(event, _opt) {\n    debug('vim mode changed:', event)\n    const { mode } = event\n    const cm = this.getCodeMirror()\n    cm.getWrapperElement().classList.remove('insert-mode')\n    cm.getWrapperElement().classList.remove('visual-mode')\n    cm.getWrapperElement().classList.remove('normal-mode')\n    cm.getWrapperElement().classList.remove('replace-mode')\n    switch (mode) {\n      case 'normal':\n        cm.getWrapperElement().classList.add('normal-mode')\n        break\n      case 'visual':\n        cm.getWrapperElement().classList.add('visual-mode')\n        break\n      case 'replace':\n        cm.getWrapperElement().classList.add('replace-mode')\n        break\n      case 'insert':\n        cm.getWrapperElement().classList.add('insert-mode')\n        break\n    }\n  }\n\n  @autobind\n  handleEditorKeyDown(event) {\n    const keyName = event.key\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const isNumberic = keyName.match(/^\\d$/)\n\n    if (this.isBufferingKey()) {\n      debug('handle key buffering:', keyName, event)\n      const keyBinding = inkdrop.keymaps.findKeyBindings({\n        keystrokes: keyName,\n        target: cm.getInputField()\n      })\n      const b = cm\n        .getInputField()\n        .webkitMatchesSelector(\n          '.CodeMirror.vim-mode:not(.insert-mode) textarea'\n        )\n      debug('keybinding check:', keyBinding, b)\n\n      if (\n        keyName !== 'Ctrl' &&\n        keyName !== 'Alt' &&\n        keyName !== 'Shift' &&\n        keyName !== 'Meta'\n      ) {\n        if (keyName.length === 1 && !isNumberic) {\n          vim.inputState.selectedCharacter = event.key\n          vim.inputState.keyBuffer = ''\n\n          if (keyBinding.length === 0) {\n            const { pendingCommand } = this\n            this.stopBufferingKey()\n\n            if (typeof pendingCommand === 'function') {\n              pendingCommand(event)\n            }\n\n            event.stopPropagation()\n            event.preventDefault()\n          }\n        }\n        if (isNumberic) {\n          this.bufferKey(keyName)\n          vim.inputState.pushRepeatDigit(keyName)\n        }\n      }\n    } else if (!this.isInsertMode()) {\n      if (isNumberic) {\n        this.bufferKey(keyName)\n      } else {\n        // push key buffer to the repeat digit\n        const keys = vim.inputState.keyBuffer\n        vim.inputState.keyBuffer = ''\n        const keysMatcher = /^(\\d*)(.*)$/.exec(keys)\n        if (keysMatcher[1] && keysMatcher[1] !== '0') {\n          vim.inputState.pushRepeatDigit(keysMatcher[1])\n        }\n      }\n    }\n  }\n\n  @autobind\n  handleFocusEditor(_event) {\n    this.yankClipboard()\n  }\n}\n\nmodule.exports = new Plugin()\n"]}