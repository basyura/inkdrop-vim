{"version":3,"sources":["../src/vim.js"],"names":["Plugin","editor","activateMode","event","_opt","logger","debug","mode","cm","getCodeMirror","getWrapperElement","classList","remove","add","isInsertMode","isTrusted","text","data","replaceSelection","keyName","key","vim","maybeInitVimState","isNumberic","match","isBufferingKey","inputState","keyBinding","inkdrop","keymaps","findKeyBindings","keystrokes","target","getInputField","b","webkitMatchesSelector","hasOperatorOrMotion","motion","operator","length","selectedCharacter","keyBuffer","pendingCommand","stopBufferingKey","stopPropagation","preventDefault","pushRepeatDigit","keys","keysMatcher","exec","_event","yankClipboard","activate","CodeMirror","isEditorActive","getActiveEditor","onEditorLoad","handleEditorLoad","deactivate","disposables","dispose","deactivateMode","originalKeyMap","getOption","setOption","on","handleVimModeChange","handleFocusEditor","el","registerCommands","registerExCommands","off","startBufferingKey","command","customBufferingModeClass","wrapper","classes","Array","prototype","slice","apply","i","startsWith","undefined","contains","bufferKey","vimKey","cmKeyToVimKey","CompositeDisposable","doKeyToKey","toKeys","substring","index","handleEditorKeyDown","KeyboardEvent","exactMatchCandidates","findMatchCandidates","bindings","findExactMatches","document","activeElement","commands","dispatch","h","e","Object","assign","state","operation","curOp","isVimOp","type","commandDispatcher","processCommand","Vim","suppressErrorLogging","console","error","originalEvent","p","visualMode","handlers","clearInputState","exitVisualMode","exitInsertMode","motionArgs","forward","linewise","wordEnd","bigWord","inclusive","toJumplist","handler","getRepeat","toFirstChar","repeatOffset","explicitRepeat","action","actionArgs","position","context","isEdit","insertAt","textObjectInner","operatorArgs","indentRight","after","toLower","shouldMoveCursor","searchArgs","querySrc","wholeWordOnly","replace","blockwise","interlaceInsertRepeat","operatorMotionArgs","visualLine","increase","backtrack","sameLine","addEventListener","handleEditorTextInput","Disposable","removeEventListener","defineEx","getVimGlobalState","clipboard","readText","indexOf","registerController","pushText","module","exports"],"mappings":"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","sourcesContent":["import { logger } from 'inkdrop'\nimport vimKeymap from './keymap'\nimport { CompositeDisposable, Disposable } from 'event-kit'\nimport CodeMirror from 'codemirror'\nimport { clipboard } from 'electron'\n\nclass Plugin {\n  activate() {\n    this.vim = vimKeymap(CodeMirror)\n    if (inkdrop.isEditorActive()) {\n      this.activateMode(inkdrop.getActiveEditor())\n    }\n    inkdrop.onEditorLoad(this.handleEditorLoad)\n  }\n\n  deactivate() {\n    if (this.disposables) {\n      this.disposables.dispose()\n    }\n    if (inkdrop.isEditorActive()) {\n      this.deactivateMode(inkdrop.getActiveEditor())\n    }\n  }\n\n  activateMode(editor) {\n    const { cm } = editor\n    this.originalKeyMap = cm.getOption('keyMap')\n    cm.setOption('keyMap', 'vim')\n    cm.on('vim-mode-change', this.handleVimModeChange)\n    cm.on('focus', this.handleFocusEditor)\n\n    const el = cm.getWrapperElement()\n    el.classList.add('vim-mode', 'normal-mode')\n\n    this.registerCommands()\n    this.registerExCommands()\n  }\n\n  deactivateMode(editor) {\n    const { cm } = editor\n    if (cm && this.originalKeyMap) {\n      cm.setOption('keyMap', this.originalKeyMap)\n      cm.off('vim-mode-change', this.handleVimModeChange)\n      const el = cm.getWrapperElement()\n      el.classList.remove('vim-mode')\n    }\n  }\n\n  startBufferingKey(command, customBufferingModeClass) {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    logger.debug('Start key buffering')\n    wrapper.classList.add('key-buffering')\n    if (customBufferingModeClass) {\n      wrapper.classList.add('key-buffering-' + customBufferingModeClass)\n    }\n    this.pendingCommand = command\n  }\n\n  stopBufferingKey() {\n    logger.debug('Stop key buffering')\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    const classes = Array.prototype.slice.apply(wrapper.classList)\n    for (const i of classes) {\n      if (i.startsWith('key-buffering')) {\n        wrapper.classList.remove(i)\n      }\n    }\n    this.pendingCommand = undefined\n  }\n\n  isBufferingKey() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('key-buffering')\n  }\n\n  bufferKey(key) {\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const vimKey = this.vim.cmKeyToVimKey(\"'\" + key + \"'\")\n    vim.inputState.keyBuffer = vim.inputState.keyBuffer + vimKey\n    logger.debug('keyBuffer:', vim.inputState.keyBuffer, vim.inputState)\n  }\n\n  isInsertMode() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('insert-mode')\n  }\n\n  registerCommands() {\n    const disposables = new CompositeDisposable()\n    const editor = inkdrop.getActiveEditor()\n    const { cm } = editor\n    const wrapper = cm.getWrapperElement()\n\n    const doKeyToKey = async command => {\n      logger.debug('doKeyToKey:', command)\n      let keys = command.toKeys\n      while (keys) {\n        // Pull off one command key, which is either a single character\n        // or a special sequence wrapped in '<' and '>', e.g. '<Space>'.\n        const match = /<\\w+-.+?>|<\\w+>|./.exec(keys)\n        let key = match[0]\n        logger.debug('key:', key)\n        keys = keys.substring(match.index + key.length)\n\n        if (this.isBufferingKey()) {\n          this.handleEditorKeyDown(new KeyboardEvent('keydown', { key }))\n        } else {\n          if (key.match(/^[A-Z]$/)) {\n            key = 'shift-' + key\n          }\n          const { exactMatchCandidates } = inkdrop.keymaps.findMatchCandidates([\n            key\n          ])\n          logger.debug('exactMatchCandidates:', exactMatchCandidates)\n          const bindings = inkdrop.keymaps.findExactMatches(\n            exactMatchCandidates,\n            document.activeElement\n          )\n          const b = bindings[0]\n          if (b) {\n            inkdrop.commands.dispatch(document.activeElement, b.command)\n          } else {\n            logger.debug('command not found for key:', key)\n          }\n        }\n      }\n    }\n\n    // bind key to command\n    const h = command => {\n      return e => {\n        logger.debug(\n          'command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState)\n        )\n        e.stopPropagation()\n        const vim = this.vim.maybeInitVimState(cm)\n        return cm.operation(() => {\n          cm.curOp.isVimOp = true\n          try {\n            if (command.type === 'keyToKey') {\n              doKeyToKey(command)\n            } else {\n              this.vim.commandDispatcher.processCommand(cm, vim, command)\n            }\n          } catch (e) {\n            // clear VIM state in case it's in a bad state.\n            cm.state.vim = undefined\n            this.vim.maybeInitVimState(cm)\n            if (!CodeMirror.Vim.suppressErrorLogging) {\n              console.error(e)\n            }\n            throw e\n          }\n          return true\n        })\n      }\n    }\n    // bind keystroke to command\n    const b = command => {\n      return e => {\n        logger.debug(\n          'buffer command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent\n        )\n        this.startBufferingKey(h(command), 'command')\n        this.bufferKey(e.originalEvent.key)\n      }\n    }\n    // bind keystroke to operator\n    const p = command => {\n      return e => {\n        logger.debug(\n          'operator command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent,\n          e\n        )\n        const vim = this.vim.maybeInitVimState(cm)\n        if (\n          !vim.inputState.operator &&\n          !this.isBufferingKey() &&\n          !vim.visualMode\n        ) {\n          this.startBufferingKey(e => {\n            const el = cm.getInputField()\n            const keyBinding = inkdrop.keymaps.findKeyBindings({\n              keystrokes: e.key,\n              target: el\n            })\n            if (keyBinding.length > 0) {\n              inkdrop.commands.dispatch(el, keyBinding[0].command)\n            }\n          }, 'operator')\n          if (e.originalEvent) {\n            this.bufferKey(e.originalEvent.key)\n          } else {\n            logger.debug('buffer key:', command.keys)\n            this.bufferKey(command.keys)\n          }\n        }\n        return h(command)(e)\n      }\n    }\n    const handlers = {\n      'vim-mode:native!': () => {},\n      'vim-mode:reset-normal-mode': e => {\n        CodeMirror.Vim.clearInputState(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim-mode:exit-visual-mode': e => {\n        logger.debug('exit-visual-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitVisualMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim-mode:exit-insert-mode': e => {\n        logger.debug('exit-insert-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitInsertMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim-mode:move-left': h({\n        keys: 'h',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:move-right': h({\n        keys: 'l',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true }\n      }),\n      'vim-mode:move-up': h({\n        keys: 'k',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: false, linewise: true }\n      }),\n      'vim-mode:move-down': h({\n        keys: 'j',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, linewise: true }\n      }),\n\n      'vim-mode:move-to-next-word': h({\n        keys: 'w',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false }\n      }),\n      'vim-mode:move-to-next-whole-word': h({\n        keys: 'W',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false, bigWord: true }\n      }),\n      'vim-mode:move-to-end-of-word': h({\n        keys: 'e',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: true, inclusive: true }\n      }),\n      'vim-mode:move-to-previous-end-of-word': h({\n        keys: 'ge',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: true, inclusive: true }\n      }),\n      'vim-mode:move-to-end-of-whole-word': h({\n        keys: 'E',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: true,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim-mode:move-to-previous-end-of-whole-word': h({\n        keys: 'gE',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: false,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim-mode:move-to-previous-word': h({\n        keys: 'b',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false }\n      }),\n      'vim-mode:move-to-previous-whole-word': h({\n        keys: 'B',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false, bigWord: true }\n      }),\n      'vim-mode:move-to-next-paragraph': h({\n        keys: '}',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim-mode:move-to-previous-paragraph': h({\n        keys: '{',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n      'vim-mode:move-to-beginning-of-line-with-zero': (() => {\n        const handler = h({\n          keys: '0',\n          type: 'motion',\n          motion: 'moveToStartOfLine'\n        })\n        return e => {\n          const vim = this.vim.maybeInitVimState(cm)\n          if (vim.inputState.getRepeat() > 0) {\n            vim.inputState.pushRepeatDigit('0')\n          } else {\n            return handler(e)\n          }\n        }\n      })(),\n      'vim-mode:move-to-beginning-of-line': h({\n        keys: '0',\n        type: 'motion',\n        motion: 'moveToStartOfLine'\n      }),\n      'vim-mode:move-to-first-character-of-line': h({\n        keys: '^',\n        type: 'motion',\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:move-to-first-character-of-line-and-down': h({\n        keys: '_',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true, repeatOffset: -1 }\n      }),\n      'vim-mode:move-to-last-character-of-line': h({\n        keys: '$',\n        type: 'motion',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true }\n      }),\n      'vim-mode:move-to-last-nonblank-character-of-line-and-down': () => {\n        '???'\n      },\n      'vim-mode:move-to-first-character-of-line-up': h({\n        keys: '-',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: false, toFirstChar: true }\n      }),\n      'vim-mode:move-to-first-character-of-line-down': h({\n        keys: '+',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true }\n      }),\n\n      'vim-mode:move-to-start-of-file': h({\n        keys: 'gg',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: false,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:scroll-half-screen-up': h({\n        keys: '<C-u>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: false, explicitRepeat: true }\n      }),\n      'vim-mode:scroll-full-screen-up': h({\n        keys: '<C-b>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:scroll-half-screen-down': h({\n        keys: '<C-d>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: true, explicitRepeat: true }\n      }),\n      'vim-mode:scroll-full-screen-down': h({\n        keys: '<C-f>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: true }\n      }),\n      'vim-mode:scroll-down': h({\n        keys: '<C-e>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: true, linewise: true }\n      }),\n      'vim-mode:scroll-up': h({\n        keys: '<C-y>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: false, linewise: true }\n      }),\n      'vim-mode:scroll-cursor-to-top': h({\n        keys: 'z<CR>',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:scroll-cursor-to-top-leave': h({\n        keys: 'zt',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' }\n      }),\n      'vim-mode:scroll-cursor-to-middle': h({\n        keys: 'z.',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:scroll-cursor-to-middle-leave': h({\n        keys: 'zz',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' }\n      }),\n      'vim-mode:scroll-cursor-to-bottom': h({\n        keys: 'z-',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' }\n      }),\n      'vim-mode:scroll-cursor-to-bottom-leave': h({\n        keys: 'zb',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:move-to-line': h({\n        keys: 'G',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: true,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:move-to-top-of-screen': h({\n        keys: 'H',\n        type: 'motion',\n        motion: 'moveToTopLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim-mode:move-to-bottom-of-screen': h({\n        keys: 'L',\n        type: 'motion',\n        motion: 'moveToBottomLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim-mode:move-to-middle-of-screen': h({\n        keys: 'M',\n        type: 'motion',\n        motion: 'moveToMiddleLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n\n      'vim-mode:delete': p({ keys: 'd', type: 'operator', operator: 'delete' }),\n      'vim-mode:delete-to-last-character-of-line': h({\n        keys: 'D',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim-mode:change': p({ keys: 'c', type: 'operator', operator: 'change' }),\n      'vim-mode:change-to-last-character-of-line': h({\n        keys: 'C',\n        type: 'operatorMotion',\n        operator: 'change',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim-mode:substitute-line': h({\n        keys: 'S',\n        type: 'keyToKey',\n        toKeys: 'cc',\n        context: 'normal'\n      }),\n      'vim-mode:substitute-line-visual': h({\n        keys: 'S',\n        type: 'keyToKey',\n        toKeys: 'VdO',\n        context: 'visual'\n      }),\n      'vim-mode:replace': b({\n        keys: 'r<character>',\n        type: 'action',\n        action: 'replace',\n        isEdit: true\n      }),\n      'vim-mode:insert-at-beginning-of-line': h({\n        keys: 'I',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'firstNonBlank' },\n        context: 'normal'\n      }),\n      'vim-mode:text-object-manipulation-inner': b({\n        keys: 'i<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation',\n        motionArgs: { textObjectInner: true }\n      }),\n      'vim-mode:text-object-manipulation': b({\n        keys: 'a<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation'\n      }),\n      'vim-mode:indent': p({\n        keys: '>',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: true }\n      }),\n      'vim-mode:outdent': p({\n        keys: '<',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: false }\n      }),\n      'vim-mode:auto-indent': () => {\n        'not supported'\n      },\n      'vim-mode:join': h({\n        keys: 'J',\n        type: 'action',\n        action: 'joinLines',\n        isEdit: true\n      }),\n\n      'vim-mode:yank': p({ keys: 'y', type: 'operator', operator: 'yank' }),\n      'vim-mode:yank-line': h({\n        keys: 'Y',\n        type: 'operatorMotion',\n        operator: 'yank',\n        motion: 'expandToLine',\n        motionArgs: { linewise: true },\n        context: 'normal'\n      }),\n      'vim-mode:put-before': h({\n        keys: 'P',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: false, isEdit: true }\n      }),\n      'vim-mode:put-after': h({\n        keys: 'p',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: true, isEdit: true }\n      }),\n\n      'vim-mode:toggle-case': h({\n        keys: 'g~',\n        type: 'operator',\n        operator: 'changeCase'\n      }),\n      'vim-mode:upper-case': h({\n        keys: 'gU',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: false },\n        isEdit: true\n      }),\n      'vim-mode:lower-case': h({\n        keys: 'gu',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: true },\n        isEdit: true\n      }),\n      'vim-mode:toggle-case-now': h({\n        keys: '~',\n        type: 'operatorMotion',\n        operator: 'changeCase',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorArgs: { shouldMoveCursor: true },\n        context: 'normal'\n      }),\n\n      'vim-mode:mark': b({\n        keys: 'm<character>',\n        type: 'action',\n        action: 'setMark'\n      }),\n      'vim-mode:move-to-mark-literal': b({\n        keys: '`<character>',\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true }\n      }),\n      'vim-mode:move-to-mark': b({\n        keys: \"'<character>\",\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true, linewise: true }\n      }),\n\n      'vim-mode:find': b({\n        keys: 'f<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim-mode:find-backwards': b({\n        keys: 'F<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:till': b({\n        keys: 't<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim-mode:till-backwards': b({\n        keys: 'T<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:repeat-find': h({\n        keys: ';',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: true }\n      }),\n      'vim-mode:repeat-find-reverse': h({\n        keys: ',',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: false }\n      }),\n\n      'vim-mode:search': h({\n        keys: '/',\n        type: 'search',\n        searchArgs: { forward: true, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim-mode:reverse-search': h({\n        keys: '?',\n        type: 'search',\n        searchArgs: { forward: false, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim-mode:search-current-word': h({\n        keys: '*',\n        type: 'search',\n        searchArgs: {\n          forward: true,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:reverse-search-current-word': h({\n        keys: '#',\n        type: 'search',\n        searchArgs: {\n          forward: false,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:repeat-search': h({\n        keys: 'n',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim-mode:repeat-search-backwards': h({\n        keys: 'N',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n\n      'vim-mode:bracket-matching-motion': h({\n        keys: '%',\n        type: 'motion',\n        motion: 'moveToMatchedSymbol',\n        motionArgs: { inclusive: true, toJumplist: true }\n      }),\n\n      'vim-mode:ex-command': h({ keys: ':', type: 'ex' }),\n\n      // normal mode\n      'vim-mode:activate-insert-mode': h({\n        keys: 'i',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'inplace' },\n        context: 'normal'\n      }),\n      'vim-mode:activate-replace-mode': h({\n        keys: 'R',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { replace: true }\n      }),\n      'vim-mode:activate-characterwise-visual-mode': h({\n        keys: 'v',\n        type: 'action',\n        action: 'toggleVisualMode'\n      }),\n      'vim-mode:activate-linewise-visual-mode': h({\n        keys: 'V',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { linewise: true }\n      }),\n      'vim-mode:activate-blockwise-visual-mode': h({\n        keys: '<C-v>',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { blockwise: true }\n      }),\n\n      'vim-mode:undo': h({\n        keys: 'u',\n        type: 'action',\n        action: 'undo',\n        context: 'normal'\n      }),\n\n      'vim-mode:insert-above-with-newline': h({\n        keys: 'O',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: false },\n        context: 'normal'\n      }),\n      'vim-mode:insert-below-with-newline': h({\n        keys: 'o',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: true },\n        context: 'normal'\n      }),\n      'vim-mode:insert-after': h({\n        keys: 'a',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'charAfter' },\n        context: 'normal'\n      }),\n      'vim-mode:insert-after-end-of-line': h({\n        keys: 'A',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'eol' },\n        context: 'normal'\n      }),\n      'vim-mode:delete-right': h({\n        keys: 'x',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorMotionArgs: { visualLine: false }\n      }),\n      'vim-mode:delete-left': h({\n        keys: 'X',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false },\n        operatorMotionArgs: { visualLine: true }\n      }),\n      'vim-mode:substitute': h({\n        keys: 's',\n        type: 'keyToKey',\n        toKeys: 'cl',\n        context: 'normal'\n      }),\n      'vim-mode:substitute-visual': h({\n        keys: 's',\n        type: 'keyToKey',\n        toKeys: 'c',\n        context: 'visual'\n      }),\n      'vim-mode:repeat': h({\n        keys: '.',\n        type: 'action',\n        action: 'repeatLastEdit'\n      }),\n\n      'vim-mode:increase': h({\n        keys: '<C-a>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: true, backtrack: false }\n      }),\n      'vim-mode:decrease': h({\n        keys: '<C-x>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: false, backtrack: false }\n      }),\n\n      'vim-mode:register-prefix': b({\n        keys: '\"<character>',\n        type: 'action',\n        action: 'setRegister'\n      }),\n\n      // insert mode\n      'vim-mode:delete-to-beginning-of-word': h({\n        keys: '<C-w>',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false },\n        context: 'insert'\n      }),\n\n      // visual mode\n      'vim-mode:insert-at-start-of-target': h({\n        keys: 'I',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'startOfSelectedArea' },\n        context: 'visual'\n      }),\n      'vim-mode:insert-at-end-of-target': h({\n        keys: 'A',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'endOfSelectedArea' },\n        context: 'visual'\n      }),\n      'vim-mode:reverse-selections': h({\n        keys: 'o',\n        type: 'motion',\n        motion: 'moveToOtherHighlightedEnd',\n        context: 'visual'\n      }),\n      'vim-mode:reverse-selections-at-same-line': h({\n        keys: 'O',\n        type: 'motion',\n        motion: 'moveToOtherHighlightedEnd',\n        motionArgs: { sameLine: true },\n        context: 'visual'\n      })\n    }\n    disposables.add(inkdrop.commands.add(wrapper, handlers))\n    wrapper.addEventListener('textInput', this.handleEditorTextInput)\n    wrapper.addEventListener('keydown', this.handleEditorKeyDown)\n    disposables.add(\n      new Disposable(() =>\n        wrapper.removeEventListener('keydown', this.handleEditorKeyDown)\n      )\n    )\n\n    this.disposables = disposables\n  }\n\n  registerExCommands() {\n    const el = this.getCodeMirror().getWrapperElement()\n    this.vim.defineEx('write', 'w', () => {\n      inkdrop.commands.dispatch(el, 'core:save-note')\n    })\n    this.vim.defineEx('next', 'n', () => {\n      inkdrop.commands.dispatch(el, 'core:open-next-note')\n    })\n    this.vim.defineEx('prev', '', () => {\n      inkdrop.commands.dispatch(el, 'core:open-prev-note')\n    })\n    this.vim.defineEx('preview', 'p', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-preview')\n    })\n    this.vim.defineEx('side-by-side', 'side', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-side-by-side')\n    })\n  }\n\n  getCodeMirror() {\n    return inkdrop.getActiveEditor().cm\n  }\n\n  yankClipboard() {\n    const state = this.vim.getVimGlobalState()\n    const text = clipboard.readText()\n    const linewise = text.indexOf('\\n') >= 0\n    state.registerController.pushText('0', 'yank', text, linewise, true)\n  }\n\n  handleEditorLoad = editor => {\n    this.activateMode(editor)\n  }\n\n  handleVimModeChange = (event, _opt) => {\n    logger.debug('vim mode changed:', event)\n    const { mode } = event\n    const cm = this.getCodeMirror()\n    cm.getWrapperElement().classList.remove('insert-mode')\n    cm.getWrapperElement().classList.remove('visual-mode')\n    cm.getWrapperElement().classList.remove('normal-mode')\n    cm.getWrapperElement().classList.remove('replace-mode')\n    switch (mode) {\n      case 'normal':\n        cm.getWrapperElement().classList.add('normal-mode')\n        break\n      case 'visual':\n        cm.getWrapperElement().classList.add('visual-mode')\n        break\n      case 'replace':\n        cm.getWrapperElement().classList.add('replace-mode')\n        break\n      case 'insert':\n        cm.getWrapperElement().classList.add('insert-mode')\n        break\n    }\n  }\n\n  handleEditorTextInput = event => {\n    // only process if the event is fired via EventTarget.dispatchEvent()\n    if (this.isInsertMode() && !event.isTrusted) {\n      logger.debug('handle text input:', event)\n      const text = event.data\n      const cm = this.getCodeMirror()\n      cm.replaceSelection(text)\n    }\n  }\n\n  handleEditorKeyDown = event => {\n    const keyName = event.key\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const isNumberic = keyName.match(/^\\d$/)\n\n    if (this.isBufferingKey()) {\n      logger.debug('handle key buffering:', keyName, event, vim.inputState)\n      const keyBinding = inkdrop.keymaps.findKeyBindings({\n        keystrokes: keyName,\n        target: cm.getInputField()\n      })\n      const b = cm\n        .getInputField()\n        .webkitMatchesSelector(\n          '.CodeMirror.vim-mode:not(.insert-mode) textarea'\n        )\n      logger.debug('keybinding check:', keyBinding, b)\n\n      if (\n        keyName !== 'Ctrl' &&\n        keyName !== 'Alt' &&\n        keyName !== 'Shift' &&\n        keyName !== 'Meta'\n      ) {\n        const { inputState } = vim\n        const hasOperatorOrMotion = inputState.motion || inputState.operator\n        if (keyName.length === 1 && (!isNumberic || !hasOperatorOrMotion)) {\n          inputState.selectedCharacter = event.key\n          inputState.keyBuffer = ''\n\n          if (keyBinding.length === 0) {\n            const { pendingCommand } = this\n            this.stopBufferingKey()\n\n            if (typeof pendingCommand === 'function') {\n              pendingCommand(event)\n            }\n\n            event.stopPropagation()\n            event.preventDefault()\n          }\n        } else if (isNumberic) {\n          vim.inputState.pushRepeatDigit(keyName)\n        }\n      }\n    } else if (!this.isInsertMode()) {\n      if (isNumberic) {\n        vim.inputState.pushRepeatDigit(keyName)\n      } else {\n        // push key buffer to the repeat digit\n        const keys = vim.inputState.keyBuffer\n        vim.inputState.keyBuffer = ''\n        const keysMatcher = /^(\\d*)(.*)$/.exec(keys)\n        if (keysMatcher[1] && keysMatcher[1] !== '0') {\n          vim.inputState.pushRepeatDigit(keysMatcher[1])\n        }\n      }\n    }\n  }\n\n  handleFocusEditor = _event => {\n    this.yankClipboard()\n  }\n}\n\nmodule.exports = new Plugin()\n"],"file":"vim.js"}