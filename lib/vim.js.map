{"version":3,"sources":["../src/vim.js"],"names":["Plugin","editor","activateMode","event","_opt","logger","debug","mode","cm","getCodeMirror","getWrapperElement","classList","remove","add","keyName","key","vim","maybeInitVimState","isNumberic","match","isBufferingKey","keyBinding","inkdrop","keymaps","findKeyBindings","keystrokes","target","getInputField","b","webkitMatchesSelector","length","inputState","selectedCharacter","keyBuffer","pendingCommand","stopBufferingKey","stopPropagation","preventDefault","bufferKey","pushRepeatDigit","isInsertMode","keys","keysMatcher","exec","_event","yankClipboard","activate","CodeMirror","isEditorActive","getActiveEditor","onEditorLoad","handleEditorLoad","deactivate","disposables","dispose","deactivateMode","originalKeyMap","getOption","setOption","on","handleVimModeChange","handleFocusEditor","el","registerCommands","registerExCommands","off","startBufferingKey","command","wrapper","undefined","contains","vimKey","cmKeyToVimKey","CompositeDisposable","h","e","Object","assign","state","operation","curOp","isVimOp","commandDispatcher","processCommand","Vim","suppressErrorLogging","console","error","originalEvent","p","operator","visualMode","commands","dispatch","handlers","clearInputState","exitVisualMode","exitInsertMode","type","motion","motionArgs","forward","linewise","wordEnd","bigWord","inclusive","toJumplist","toFirstChar","repeatOffset","explicitRepeat","action","actionArgs","position","context","toKeys","isEdit","insertAt","textObjectInner","operatorArgs","indentRight","after","toLower","shouldMoveCursor","searchArgs","querySrc","wholeWordOnly","replace","blockwise","interlaceInsertRepeat","operatorMotionArgs","visualLine","increase","backtrack","addEventListener","handleEditorKeyDown","Disposable","removeEventListener","defineEx","getVimGlobalState","text","clipboard","readText","indexOf","registerController","pushText","module","exports"],"mappings":"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","sourcesContent":["import { logger } from 'inkdrop'\nimport vimKeymap from './keymap'\nimport { CompositeDisposable, Disposable } from 'event-kit'\nimport CodeMirror from 'codemirror'\nimport { clipboard } from 'electron'\n\nclass Plugin {\n  activate() {\n    this.vim = vimKeymap(CodeMirror)\n    if (inkdrop.isEditorActive()) {\n      this.activateMode(inkdrop.getActiveEditor())\n    }\n    inkdrop.onEditorLoad(this.handleEditorLoad)\n  }\n\n  deactivate() {\n    if (this.disposables) {\n      this.disposables.dispose()\n    }\n    if (inkdrop.isEditorActive()) {\n      this.deactivateMode(inkdrop.getActiveEditor())\n    }\n  }\n\n  activateMode(editor) {\n    const { cm } = editor\n    this.originalKeyMap = cm.getOption('keyMap')\n    cm.setOption('keyMap', 'vim')\n    cm.on('vim-mode-change', this.handleVimModeChange)\n    cm.on('focus', this.handleFocusEditor)\n\n    const el = cm.getWrapperElement()\n    el.classList.add('vim-mode', 'normal-mode')\n\n    this.registerCommands()\n    this.registerExCommands()\n  }\n\n  deactivateMode(editor) {\n    const { cm } = editor\n    if (cm && this.originalKeyMap) {\n      cm.setOption('keyMap', this.originalKeyMap)\n      cm.off('vim-mode-change', this.handleVimModeChange)\n      const el = cm.getWrapperElement()\n      el.classList.remove('vim-mode')\n    }\n  }\n\n  startBufferingKey(command) {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    logger.debug('Start key buffering')\n    wrapper.classList.add('key-buffering')\n    this.pendingCommand = command\n  }\n\n  stopBufferingKey() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    wrapper.classList.remove('key-buffering')\n    this.pendingCommand = undefined\n  }\n\n  isBufferingKey() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('key-buffering')\n  }\n\n  bufferKey(key) {\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const vimKey = this.vim.cmKeyToVimKey(\"'\" + key + \"'\")\n    vim.inputState.keyBuffer = vim.inputState.keyBuffer + vimKey\n    logger.debug('keyBuffer:', vim.inputState.keyBuffer)\n  }\n\n  isInsertMode() {\n    const wrapper = this.getCodeMirror().getWrapperElement()\n    return wrapper.classList.contains('insert-mode')\n  }\n\n  registerCommands() {\n    const disposables = new CompositeDisposable()\n    const editor = inkdrop.getActiveEditor()\n    const { cm } = editor\n    const wrapper = cm.getWrapperElement()\n    // bind key to command\n    const h = command => {\n      return e => {\n        logger.debug(\n          'command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState)\n        )\n        e.stopPropagation()\n        const vim = this.vim.maybeInitVimState(cm)\n        return cm.operation(() => {\n          cm.curOp.isVimOp = true\n          try {\n            this.vim.commandDispatcher.processCommand(cm, vim, command)\n          } catch (e) {\n            // clear VIM state in case it's in a bad state.\n            cm.state.vim = undefined\n            this.vim.maybeInitVimState(cm)\n            if (!CodeMirror.Vim.suppressErrorLogging) {\n              console.error(e)\n            }\n            throw e\n          }\n          return true\n        })\n      }\n    }\n    // bind keystroke to command\n    const b = command => {\n      return e => {\n        logger.debug(\n          'buffer command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent\n        )\n        this.startBufferingKey(h(command))\n        this.bufferKey(e.originalEvent.key)\n      }\n    }\n    // bind operator to command\n    const p = command => {\n      return e => {\n        logger.debug(\n          'operator command:',\n          command,\n          'state:',\n          Object.assign({}, cm.state.vim.inputState),\n          e.originalEvent\n        )\n        const vim = this.vim.maybeInitVimState(cm)\n        if (\n          !vim.inputState.operator &&\n          !this.isBufferingKey() &&\n          !vim.visualMode\n        ) {\n          this.startBufferingKey(e => {\n            const el = cm.getInputField()\n            const keyBinding = inkdrop.keymaps.findKeyBindings({\n              keystrokes: e.key,\n              target: el\n            })\n            if (keyBinding.length > 0) {\n              inkdrop.commands.dispatch(el, keyBinding[0].command)\n            }\n          })\n          this.bufferKey(e.originalEvent.key)\n        }\n        return h(command)(e)\n      }\n    }\n    const handlers = {\n      'vim-mode:native!': () => {},\n      'vim-mode:reset-normal-mode': e => {\n        CodeMirror.Vim.clearInputState(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim-mode:exit-visual-mode': e => {\n        logger.debug('exit-visual-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitVisualMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim-mode:exit-insert-mode': e => {\n        logger.debug('exit-insert-mode')\n        CodeMirror.Vim.clearInputState(cm)\n        CodeMirror.Vim.exitInsertMode(cm)\n        this.stopBufferingKey()\n        e.stopPropagation()\n      },\n      'vim-mode:move-left': h({\n        keys: 'h',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:move-right': h({\n        keys: 'l',\n        type: 'motion',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true }\n      }),\n      'vim-mode:move-up': h({\n        keys: 'k',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: false, linewise: true }\n      }),\n      'vim-mode:move-down': h({\n        keys: 'j',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, linewise: true }\n      }),\n\n      'vim-mode:move-to-next-word': h({\n        keys: 'w',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false }\n      }),\n      'vim-mode:move-to-next-whole-word': h({\n        keys: 'W',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: false, bigWord: true }\n      }),\n      'vim-mode:move-to-end-of-word': h({\n        keys: 'e',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: true, wordEnd: true, inclusive: true }\n      }),\n      'vim-mode:move-to-previous-end-of-word': h({\n        keys: 'ge',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: true, inclusive: true }\n      }),\n      'vim-mode:move-to-end-of-whole-word': h({\n        keys: 'E',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: true,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim-mode:move-to-previous-end-of-whole-word': h({\n        keys: 'gE',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: {\n          forward: false,\n          wordEnd: true,\n          bigWord: true,\n          inclusive: true\n        }\n      }),\n      'vim-mode:move-to-previous-word': h({\n        keys: 'b',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false }\n      }),\n      'vim-mode:move-to-previous-whole-word': h({\n        keys: 'B',\n        type: 'motion',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false, bigWord: true }\n      }),\n      'vim-mode:move-to-next-paragraph': h({\n        keys: '}',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim-mode:move-to-previous-paragraph': h({\n        keys: '{',\n        type: 'motion',\n        motion: 'moveByParagraph',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n      'vim-mode:move-to-beginning-of-line': h({\n        keys: '0',\n        type: 'motion',\n        motion: 'moveToStartOfLine'\n      }),\n      'vim-mode:move-to-first-character-of-line': h({\n        keys: '^',\n        type: 'motion',\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:move-to-first-character-of-line-and-down': h({\n        keys: '_',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true, repeatOffset: -1 }\n      }),\n      'vim-mode:move-to-last-character-of-line': h({\n        keys: '$',\n        type: 'motion',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true }\n      }),\n      'vim-mode:move-to-last-nonblank-character-of-line-and-down': () => {\n        '???'\n      },\n      'vim-mode:move-to-first-character-of-line-up': h({\n        keys: '-',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: false, toFirstChar: true }\n      }),\n      'vim-mode:move-to-first-character-of-line-down': h({\n        keys: '+',\n        type: 'motion',\n        motion: 'moveByLines',\n        motionArgs: { forward: true, toFirstChar: true }\n      }),\n\n      'vim-mode:move-to-start-of-file': h({\n        keys: 'gg',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: false,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:scroll-half-screen-up': h({\n        keys: '<C-u>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: false, explicitRepeat: true }\n      }),\n      'vim-mode:scroll-full-screen-up': h({\n        keys: '<C-b>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:scroll-half-screen-down': h({\n        keys: '<C-d>',\n        type: 'motion',\n        motion: 'moveByScroll',\n        motionArgs: { forward: true, explicitRepeat: true }\n      }),\n      'vim-mode:scroll-full-screen-down': h({\n        keys: '<C-f>',\n        type: 'motion',\n        motion: 'moveByPage',\n        motionArgs: { forward: true }\n      }),\n      'vim-mode:scroll-down': h({\n        keys: '<C-e>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: true, linewise: true }\n      }),\n      'vim-mode:scroll-up': h({\n        keys: '<C-y>',\n        type: 'action',\n        action: 'scroll',\n        actionArgs: { forward: false, linewise: true }\n      }),\n      'vim-mode:scroll-cursor-to-top': h({\n        keys: 'z<CR>',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:scroll-cursor-to-top-leave': h({\n        keys: 'zt',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'top' }\n      }),\n      'vim-mode:scroll-cursor-to-middle': h({\n        keys: 'z.',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:scroll-cursor-to-middle-leave': h({\n        keys: 'zz',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'center' }\n      }),\n      'vim-mode:scroll-cursor-to-bottom': h({\n        keys: 'z-',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' }\n      }),\n      'vim-mode:scroll-cursor-to-bottom-leave': h({\n        keys: 'zb',\n        type: 'action',\n        action: 'scrollToCursor',\n        actionArgs: { position: 'bottom' },\n        motion: 'moveToFirstNonWhiteSpaceCharacter'\n      }),\n      'vim-mode:move-to-line': h({\n        keys: 'G',\n        type: 'motion',\n        motion: 'moveToLineOrEdgeOfDocument',\n        motionArgs: {\n          forward: true,\n          explicitRepeat: true,\n          linewise: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:move-to-top-of-screen': h({\n        keys: 'H',\n        type: 'motion',\n        motion: 'moveToTopLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim-mode:move-to-bottom-of-screen': h({\n        keys: 'L',\n        type: 'motion',\n        motion: 'moveToBottomLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n      'vim-mode:move-to-middle-of-screen': h({\n        keys: 'M',\n        type: 'motion',\n        motion: 'moveToMiddleLine',\n        motionArgs: { linewise: true, toJumplist: true }\n      }),\n\n      'vim-mode:delete': p({ keys: 'd', type: 'operator', operator: 'delete' }),\n      'vim-mode:delete-to-last-character-of-line': p({\n        keys: 'D',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim-mode:change': p({ keys: 'c', type: 'operator', operator: 'change' }),\n      'vim-mode:change-to-last-character-of-line': p({\n        keys: 'C',\n        type: 'operatorMotion',\n        operator: 'change',\n        motion: 'moveToEol',\n        motionArgs: { inclusive: true },\n        context: 'normal'\n      }),\n      'vim-mode:substitute-line': h({\n        keys: 'S',\n        type: 'keyToKey',\n        toKeys: 'cc',\n        context: 'normal'\n      }),\n      'vim-mode:replace': b({\n        keys: 'r<character>',\n        type: 'action',\n        action: 'replace',\n        isEdit: true\n      }),\n      'vim-mode:insert-at-beginning-of-line': h({\n        keys: 'I',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'firstNonBlank' },\n        context: 'normal'\n      }),\n      'vim-mode:text-object-manipulation-inner': b({\n        keys: 'i<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation',\n        motionArgs: { textObjectInner: true }\n      }),\n      'vim-mode:text-object-manipulation': b({\n        keys: 'a<character>',\n        type: 'motion',\n        motion: 'textObjectManipulation'\n      }),\n      'vim-mode:indent': p({\n        keys: '>',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: true }\n      }),\n      'vim-mode:outdent': p({\n        keys: '<',\n        type: 'operator',\n        operator: 'indent',\n        operatorArgs: { indentRight: false }\n      }),\n      'vim-mode:auto-indent': () => {\n        'not supported'\n      },\n      'vim-mode:join': h({\n        keys: 'J',\n        type: 'action',\n        action: 'joinLines',\n        isEdit: true\n      }),\n\n      'vim-mode:yank': p({ keys: 'y', type: 'operator', operator: 'yank' }),\n      'vim-mode:yank-line': h({\n        keys: 'Y',\n        type: 'operatorMotion',\n        operator: 'yank',\n        motion: 'expandToLine',\n        motionArgs: { linewise: true },\n        context: 'normal'\n      }),\n      'vim-mode:put-before': h({\n        keys: 'P',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: false, isEdit: true }\n      }),\n      'vim-mode:put-after': h({\n        keys: 'p',\n        type: 'action',\n        action: 'paste',\n        isEdit: true,\n        actionArgs: { after: true, isEdit: true }\n      }),\n\n      'vim-mode:toggle-case': h({\n        keys: 'g~',\n        type: 'operator',\n        operator: 'changeCase'\n      }),\n      'vim-mode:upper-case': h({\n        keys: 'gU',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: false },\n        isEdit: true\n      }),\n      'vim-mode:lower-case': h({\n        keys: 'gu',\n        type: 'operator',\n        operator: 'changeCase',\n        operatorArgs: { toLower: true },\n        isEdit: true\n      }),\n      'vim-mode:toggle-case-now': h({\n        keys: '~',\n        type: 'operatorMotion',\n        operator: 'changeCase',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorArgs: { shouldMoveCursor: true },\n        context: 'normal'\n      }),\n\n      'vim-mode:mark': b({\n        keys: 'm<character>',\n        type: 'action',\n        action: 'setMark'\n      }),\n      'vim-mode:move-to-mark-literal': b({\n        keys: '`<character>',\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true }\n      }),\n      'vim-mode:move-to-mark': b({\n        keys: \"'<character>\",\n        type: 'motion',\n        motion: 'goToMark',\n        motionArgs: { toJumplist: true, linewise: true }\n      }),\n\n      'vim-mode:find': b({\n        keys: 'f<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim-mode:find-backwards': b({\n        keys: 'F<character>',\n        type: 'motion',\n        motion: 'moveToCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:till': b({\n        keys: 't<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: true, inclusive: true }\n      }),\n      'vim-mode:till-backwards': b({\n        keys: 'T<character>',\n        type: 'motion',\n        motion: 'moveTillCharacter',\n        motionArgs: { forward: false }\n      }),\n      'vim-mode:repeat-find': h({\n        keys: ';',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: true }\n      }),\n      'vim-mode:repeat-find-reverse': h({\n        keys: ',',\n        type: 'motion',\n        motion: 'repeatLastCharacterSearch',\n        motionArgs: { forward: false }\n      }),\n\n      'vim-mode:search': h({\n        keys: '/',\n        type: 'search',\n        searchArgs: { forward: true, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim-mode:reverse-search': h({\n        keys: '?',\n        type: 'search',\n        searchArgs: { forward: false, querySrc: 'prompt', toJumplist: true }\n      }),\n      'vim-mode:search-current-word': h({\n        keys: '*',\n        type: 'search',\n        searchArgs: {\n          forward: true,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:reverse-search-current-word': h({\n        keys: '#',\n        type: 'search',\n        searchArgs: {\n          forward: false,\n          querySrc: 'wordUnderCursor',\n          wholeWordOnly: true,\n          toJumplist: true\n        }\n      }),\n      'vim-mode:repeat-search': h({\n        keys: 'n',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: true, toJumplist: true }\n      }),\n      'vim-mode:repeat-search-backwards': h({\n        keys: 'N',\n        type: 'motion',\n        motion: 'findNext',\n        motionArgs: { forward: false, toJumplist: true }\n      }),\n\n      'vim-mode:bracket-matching-motion': h({\n        keys: '%',\n        type: 'motion',\n        motion: 'moveToMatchedSymbol',\n        motionArgs: { inclusive: true, toJumplist: true }\n      }),\n\n      'vim-mode:ex-command': h({ keys: ':', type: 'ex' }),\n\n      // normal mode\n      'vim-mode:activate-insert-mode': h({\n        keys: 'i',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'inplace' },\n        context: 'normal'\n      }),\n      'vim-mode:activate-replace-mode': h({\n        keys: 'R',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { replace: true }\n      }),\n      'vim-mode:activate-characterwise-visual-mode': h({\n        keys: 'v',\n        type: 'action',\n        action: 'toggleVisualMode'\n      }),\n      'vim-mode:activate-linewise-visual-mode': h({\n        keys: 'V',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { linewise: true }\n      }),\n      'vim-mode:activate-blockwise-visual-mode': h({\n        keys: '<C-v>',\n        type: 'action',\n        action: 'toggleVisualMode',\n        actionArgs: { blockwise: true }\n      }),\n\n      'vim-mode:undo': h({\n        keys: 'u',\n        type: 'action',\n        action: 'undo',\n        context: 'normal'\n      }),\n\n      'vim-mode:insert-above-with-newline': h({\n        keys: 'O',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: false },\n        context: 'normal'\n      }),\n      'vim-mode:insert-below-with-newline': h({\n        keys: 'o',\n        type: 'action',\n        action: 'newLineAndEnterInsertMode',\n        isEdit: true,\n        interlaceInsertRepeat: true,\n        actionArgs: { after: true },\n        context: 'normal'\n      }),\n      'vim-mode:insert-after': h({\n        keys: 'a',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'charAfter' },\n        context: 'normal'\n      }),\n      'vim-mode:insert-after-end-of-line': h({\n        keys: 'A',\n        type: 'action',\n        action: 'enterInsertMode',\n        isEdit: true,\n        actionArgs: { insertAt: 'eol' },\n        context: 'normal'\n      }),\n      'vim-mode:delete-right': h({\n        keys: 'x',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: true },\n        operatorMotionArgs: { visualLine: false }\n      }),\n      'vim-mode:delete-left': h({\n        keys: 'X',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByCharacters',\n        motionArgs: { forward: false },\n        operatorMotionArgs: { visualLine: true }\n      }),\n      'vim-mode:substitute': h({\n        keys: 's',\n        type: 'keyToKey',\n        toKeys: 'cl',\n        context: 'normal'\n      }),\n      'vim-mode:repeat': h({\n        keys: '.',\n        type: 'action',\n        action: 'repeatLastEdit'\n      }),\n\n      'vim-mode:increase': h({\n        keys: '<C-a>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: true, backtrack: false }\n      }),\n      'vim-mode:decrease': h({\n        keys: '<C-x>',\n        type: 'action',\n        action: 'incrementNumberToken',\n        isEdit: true,\n        actionArgs: { increase: false, backtrack: false }\n      }),\n\n      'vim-mode:register-prefix': b({\n        keys: '\"<character>',\n        type: 'action',\n        action: 'setRegister'\n      }),\n\n      // insert mode\n      'vim-mode:delete-to-beginning-of-word': h({\n        keys: '<C-w>',\n        type: 'operatorMotion',\n        operator: 'delete',\n        motion: 'moveByWords',\n        motionArgs: { forward: false, wordEnd: false },\n        context: 'insert'\n      })\n    }\n    disposables.add(inkdrop.commands.add(wrapper, handlers))\n    wrapper.addEventListener('keydown', this.handleEditorKeyDown)\n    disposables.add(\n      new Disposable(() =>\n        wrapper.removeEventListener('keydown', this.handleEditorKeyDown)\n      )\n    )\n\n    this.disposables = disposables\n  }\n\n  registerExCommands() {\n    const el = this.getCodeMirror().getWrapperElement()\n    this.vim.defineEx('write', 'w', () => {\n      inkdrop.commands.dispatch(el, 'core:save-note')\n    })\n    this.vim.defineEx('next', 'n', () => {\n      inkdrop.commands.dispatch(el, 'core:open-next-note')\n    })\n    this.vim.defineEx('prev', '', () => {\n      inkdrop.commands.dispatch(el, 'core:open-prev-note')\n    })\n    this.vim.defineEx('preview', 'p', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-preview')\n    })\n    this.vim.defineEx('side-by-side', 'side', () => {\n      inkdrop.commands.dispatch(el, 'view:toggle-side-by-side')\n    })\n  }\n\n  getCodeMirror() {\n    return inkdrop.getActiveEditor().cm\n  }\n\n  yankClipboard() {\n    const state = this.vim.getVimGlobalState()\n    const text = clipboard.readText()\n    const linewise = text.indexOf('\\n') >= 0\n    state.registerController.pushText('0', 'yank', text, linewise, true)\n  }\n\n  handleEditorLoad = editor => {\n    this.activateMode(editor)\n  }\n\n  handleVimModeChange = (event, _opt) => {\n    logger.debug('vim mode changed:', event)\n    const { mode } = event\n    const cm = this.getCodeMirror()\n    cm.getWrapperElement().classList.remove('insert-mode')\n    cm.getWrapperElement().classList.remove('visual-mode')\n    cm.getWrapperElement().classList.remove('normal-mode')\n    cm.getWrapperElement().classList.remove('replace-mode')\n    switch (mode) {\n      case 'normal':\n        cm.getWrapperElement().classList.add('normal-mode')\n        break\n      case 'visual':\n        cm.getWrapperElement().classList.add('visual-mode')\n        break\n      case 'replace':\n        cm.getWrapperElement().classList.add('replace-mode')\n        break\n      case 'insert':\n        cm.getWrapperElement().classList.add('insert-mode')\n        break\n    }\n  }\n\n  handleEditorKeyDown = event => {\n    const keyName = event.key\n    const cm = this.getCodeMirror()\n    const vim = this.vim.maybeInitVimState(cm)\n    const isNumberic = keyName.match(/^\\d$/)\n\n    if (this.isBufferingKey()) {\n      logger.debug('handle key buffering:', keyName, event)\n      const keyBinding = inkdrop.keymaps.findKeyBindings({\n        keystrokes: keyName,\n        target: cm.getInputField()\n      })\n      const b = cm\n        .getInputField()\n        .webkitMatchesSelector(\n          '.CodeMirror.vim-mode:not(.insert-mode) textarea'\n        )\n      logger.debug('keybinding check:', keyBinding, b)\n\n      if (\n        keyName !== 'Ctrl' &&\n        keyName !== 'Alt' &&\n        keyName !== 'Shift' &&\n        keyName !== 'Meta'\n      ) {\n        if (keyName.length === 1 && !isNumberic) {\n          vim.inputState.selectedCharacter = event.key\n          vim.inputState.keyBuffer = ''\n\n          if (keyBinding.length === 0) {\n            const { pendingCommand } = this\n            this.stopBufferingKey()\n\n            if (typeof pendingCommand === 'function') {\n              pendingCommand(event)\n            }\n\n            event.stopPropagation()\n            event.preventDefault()\n          }\n        }\n        if (isNumberic) {\n          this.bufferKey(keyName)\n          vim.inputState.pushRepeatDigit(keyName)\n        }\n      }\n    } else if (!this.isInsertMode()) {\n      if (isNumberic) {\n        this.bufferKey(keyName)\n      } else {\n        // push key buffer to the repeat digit\n        const keys = vim.inputState.keyBuffer\n        vim.inputState.keyBuffer = ''\n        const keysMatcher = /^(\\d*)(.*)$/.exec(keys)\n        if (keysMatcher[1] && keysMatcher[1] !== '0') {\n          vim.inputState.pushRepeatDigit(keysMatcher[1])\n        }\n      }\n    }\n  }\n\n  handleFocusEditor = _event => {\n    this.yankClipboard()\n  }\n}\n\nmodule.exports = new Plugin()\n"],"file":"vim.js"}